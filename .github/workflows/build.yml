name: build

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]  # macos-12, ubuntu-22.04, windows-2022
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3.3.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.5.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Before macOS install
      run: |
        brew update
        brew install ffmpeg
      if: runner.os == 'macOS'
    - name: Before Linux install
      run: |
        sudo apt update
        sudo apt install -y ffmpeg
      if: runner.os == 'Linux'
    - name: Before Windows install
      run: |
        vcpkg install ffmpeg:x64-windows
      if: runner.os == 'Windows'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build coverage flake8 pytest
    - name: Unix-like Install
      run: |
        python -m build
        pip install dist/*.whl
      if: runner.os != 'Windows'
    - name: Windows Install
      run: |
        pip install .
      if: runner.os == 'Windows'
    - name: Lint with flake8 and generate coverage report
      run: |
        flake8 . --count
    - name: Test with pytest
      run: |
        # coverage run -m pytest
        ffmpeg -i ./tests/assets/我们亲爱的Steve.mp4 -c:v libx264 -crf 23 -preset veryfast -c:a aac -b:a 128k -ac 2 -f hls -hls_time 2 -hls_playlist_type vod -hls_nt_filename "tests/assets/我们亲爱的Steve/stream_%d.ts" ./tests/assets/我们亲爱的Steve/我们亲爱的Steve.m3u8
