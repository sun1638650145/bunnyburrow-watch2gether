name: build

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest] # macos-12, ubuntu-22.04, windows-2022
        python-version: ['3.8', '3.9', '3.10', '3.11']
        exclude:
          - os: macos-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.10'
          - os: macos-latest
            python-version: '3.11'
          - os: windows-latest
            python-version: '3.8'
          - os: windows-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: '3.11'

    steps:
    - uses: actions/checkout@v3.6.0
      with:
        lfs: true # 下载Git LFS缓存.
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.7.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Before macOS install
      run: |
        brew update
        brew install ffmpeg
      if: runner.os == 'macOS'
    - name: Before Linux install
      run: |
        sudo apt update
        sudo apt install -y ffmpeg
      if: runner.os == 'Linux'
    - name: Before Windows install
      run: |
        vcpkg install ffmpeg:x64-windows
      if: runner.os == 'Windows'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build coverage flake8 httpx pytest pytest-tornasync
    - name: Unix-like Install
      run: |
        python -m build
        pip install dist/*.whl
      if: runner.os != 'Windows'
    - name: Windows Install
      run: |
        pip install .
      if: runner.os == 'Windows'
    - name: Lint with flake8
      run: |
        flake8 . --count
    - name: Test with pytest and generate coverage reports
      run: |
        coverage run -m pytest
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3.1.4
